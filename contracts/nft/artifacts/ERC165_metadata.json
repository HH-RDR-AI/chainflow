{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
			"kind": "dev",
			"methods": {
				"supportsInterface(bytes4)": {
					"details": "See {IERC165-supportsInterface}."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"mainnet/0xBE223020724CC3e2999f5dCeDA3120484FdBfef7/PicCraftNFT.sol": "ERC165"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"mainnet/0xBE223020724CC3e2999f5dCeDA3120484FdBfef7/PicCraftNFT.sol": {
			"keccak256": "0xd1c3722f2183c596536bdb6086b18a8469db6a2c9c0ec2dc04edf0136af373cc",
			"license": "MIT",
			"urls": [
				"bzz-raw://d8927c97c6af201daa67c5b1c5442e44fdbe82144a7c30f7cc669cd5726633e6",
				"dweb:/ipfs/QmQ9bza7yL1rZqUPMDteAZJ6TsJ3ZvpqhVc6XuYFKfSSQp"
			]
		}
	},
	"version": 1
}